var k=new Map([["number","Number"],["string","String"],["boolean","Boolean"],["symbol","Symbol"],["bigint","BigInt"],["undefined","(undefined)"]]),$="##INNER_TYPE##",d="@@INNER_TYPE@@";function m(r,o){if(Array.isArray(o)){for(let i=0;i<o.length;i++)if(m(r,o[i]))return!0;return!1}if(typeof o!="function")return o==="*"&&r!==null||o==="..."||o===null&&r===null||o===typeof r;switch(typeof r){case"function":case"object":break;default:r=Object(r);break}return r?.[d]?r[d]===o?.[$]:r instanceof o||r===o}function y(r){if(r===null)return"null";if(r==="*")return"(any)";let o=typeof r;if(o in k)return k.get(o);let i=(r.name||r.constructor.name||"(unknown)").split(" ").pop();return[$,d].forEach(s=>{r?.[s]&&(i+=`<${y(r?.[s])}>`)}),o==="function"&&i==="anonymous"?"(anonymous)":i}function M(r,o){let i=new Map,s=null;function b(...t){if(s)return s.apply(this,t);_(new Error,t)}function _(t,l){let n=t.stack.split(`
`).splice(3),e="",f=`
`,w="";n.forEach((u,c,E)=>{let h=u.trim().split(" "),T=h.length===3?h[1]:"(anonymous)",A=T.split(".").pop();E[c]={fullMethodName:T,methodName:A,link:h.length===3?h[2]:h[1]},c?f+=`${A}	${E[c].link}
`:w=A});let N=Array.from(i.keys()).find(u=>u.length===l.length);if(!N)throw e+=`The function "${w}" does not have an overload that takes ${l.length} arguments.`,e+=f,new Error(e);let g=!1;if(N.forEach((u,c)=>{if(!m(l[c],u)){let E=Array.isArray(u)?u.map(y).join("\u3001"):y(u);e+=`${g?`
`:""}Argument ${c+1}: Cannot convert from "${y(l[c])}" to "${E}".`,g=!0}}),g)throw e=`Error calling function "${w}"
${e}`,e+=f,new Error(e)}function a(...t){if(!i.size)return b.apply(this,t);let l=Array.from(i.keys()).filter(n=>n.length===t.length||n[n.length-1]==="...");n:for(let n=0;n<l.length;n++){let e=l[n];if(typeof e[0]<"u"&&e[0]!=="..."&&t.length===0)continue n;for(let f=0;f<t.length;f++)if(!m(t[f],e[f]||e[e.length-1]))continue n;return i.get(e).apply(this,t)}return b.apply(this,t)}if(a.add=function(t,l){if(!Array.isArray(t))throw new TypeError('"types" must be an array.');if(typeof l!="function")throw new TypeError('"fn" must be a function.');for(let n=0;n<t.length;n++)if(t[n]==="..."&&n!==t.length-1)throw new Error('A "..." parameter must be the last parameter in a formal parameter list.');return i.size&&Array.from(i.keys()).forEach(n=>{if(n.length===t.length){for(let e=0;e<n.length;e++)if(n[e]!==t[e])return;throw new Error("Function with the same signature already exists.")}}),t.forEach(n=>{let e=Array.isArray(n);if(typeof n!="function"&&!e&&n!=="*"&&n!=="...")throw new Error('The expected type must be Class, Array, "*" or the last parameter type can also be "...".');if(e){for(let f=0;f<n.length;f++)if(typeof n[f]!="function"&&n[f]!==null&&n[f]!=="*")throw new Error('The predetermined type enumeration content must be a Class, null or "*".')}}),i.set(t,l),a},a.any=function(t){if(typeof t!="function")throw new TypeError('"fn" must be a function.');if(s)throw new Error('"any" function is already defined.');return s=t,a},Array.isArray(r)&&typeof o=="function")a.add(r,o);else if(r||o)throw new TypeError('"defaultTypes" must be an array and "defaultFn" must be a function.');return a}export{M as default};
//# sourceMappingURL=overload.js.map
